{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"phu - Phage Utilities","text":"A modular toolkit for viral genomics workflows"},{"location":"#what-is-phu","title":"What is phu?","text":"<p>phu (phage utilities) is a command-line toolkit designed to streamline viral genomics workflows. It provides intuitive commands that wrap complex bioinformatics utilities behind a consistent interface, making phage and viral sequence analysis more accessible and reproducible.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Modular Design: Clean, focused commands for specific tasks.</li> <li>Easy Installation: Available through Bioconda, PyPI.</li> <li>Reproducible: Consistent interface across different utilities.</li> <li>Well Documented: Comprehensive documentation and examples.</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":""},{"location":"#installation","title":"Installation","text":"<p>Install <code>phu</code> using mamba or conda from the bioconda channel:</p> <pre><code>mamba create -n phu bioconda::phu\nmamba activate phu\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<pre><code>phu -h\n\n Usage: phu [OPTIONS] COMMAND [ARGS]...                                                       \n\n Phage utilities CLI                                                                          \n\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --help  -h        Show this message and exit.                                              \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 cluster         Sequence clustering wrapper around external 'vclust' with three modes.     \u2502\n\u2502 simplify-taxa   Simplify vContact taxonomy prediction columns into compact lineage codes.  \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"#available-commands","title":"Available Commands","text":""},{"location":"#cluster-sequence-clustering","title":"<code>cluster</code> - Sequence Clustering","text":"<p>Cluster viral sequences into operational taxonomic units with three specialized modes:</p> <ul> <li><code>dereplication</code> - Remove duplicate sequences</li> <li><code>votu</code> - Group sequences into viral Operational Taxonomic Units</li> <li><code>species</code> - Create species-level clusters</li> </ul> <p>Example: <pre><code>phu cluster --mode votu --input-contigs viral-genomes.fasta\n</code></pre></p> <p>Learn more about clustering \u2192</p>"},{"location":"#simplify-taxa-taxonomy-simplification","title":"<code>simplify-taxa</code> - Taxonomy Simplification","text":"<p>Simplify verbose vContact taxonomy predictions into compact lineage codes for easier analysis and visualization. Example: <pre><code>phu simplify-taxa -i final_assignments.csv -o simplified_taxonomy.csv\n</code></pre></p> <p>Learn more about taxonomy simplification \u2192</p>"},{"location":"#use-cases","title":"Use Cases","text":"<ul> <li>Viral Metagenomics: Dereplicate and cluster viral contigs from metagenomic assemblies</li> <li>Phage Genomics: Organize phage genomes into taxonomic groups</li> <li>Comparative Analysis: Prepare datasets for phylogenetic and comparative genomic studies</li> <li>Database Construction: Build reference databases of viral sequences</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions! Whether it's bug reports, feature requests, or code contributions, please check out our GitHub repository.</p>"},{"location":"#citation","title":"Citation","text":"<p>If you use phu in your research, please cite:</p> <pre><code>Garc\u00eda-Botero, C. (2025). phu: Phage Utilities - A modular toolkit for viral genomics workflows. \nGitHub repository: https://github.com/camilogarciabotero/phu\n</code></pre>"},{"location":"#references","title":"References","text":"<p>This program uses several key tools and libraries, make sure to acknowledge them when using <code>phu</code>:</p> <ul> <li> <p>vclust: A high-performance clustering tool for viral sequences:</p> <p>Zielezinski A, Gudy\u015b A, Barylski J, Siminski K, Rozwalak P, Dutilh BE, Deorowicz S. Ultrafast and accurate sequence alignment and clustering of viral genomes. Nat Methods. https://doi.org/10.1038/s41592-025-02701-7</p> </li> <li> <p>seqkit: A toolkit for FASTA/Q file manipulation.</p> <p>Wei Shen*, Botond Sipos, and Liuyang Zhao. 2024. SeqKit2: A Swiss Army Knife for Sequence and Alignment Processing. iMeta e191. doi:10.1002/imt2.191.</p> </li> </ul>"},{"location":"commands/cluster/","title":"cluster","text":"<p>Sequence clustering wrapper around external 'vclust' with three preconfigured modes for common viral genomics workflows.</p>"},{"location":"commands/cluster/#overview","title":"Overview","text":"<p>The <code>cluster</code> command provides a simplified interface to the powerful <code>vclust</code> tool, implementing the most common use cases from the vclust wiki with sensible defaults while allowing advanced customization.</p>"},{"location":"commands/cluster/#basic-usage","title":"Basic Usage","text":"<pre><code>phu cluster --mode &lt;MODE&gt; --input-contigs &lt;FASTA_FILE&gt; [options]\n</code></pre> <p>Output files include a TSV file with cluster assignments and a FASTA file with representative sequences.</p> <pre><code>clustered-contigs/\n\u251c\u2500\u2500 ani.ids.tsv\n\u251c\u2500\u2500 ani.tsv\n\u251c\u2500\u2500 cluster_representatives_ids.txt\n\u251c\u2500\u2500 fltr.txt\n\u251c\u2500\u2500 representatives.fna\n\u2514\u2500\u2500 species.tsv\n</code></pre>"},{"location":"commands/cluster/#modes","title":"Modes","text":""},{"location":"commands/cluster/#modes_1","title":"Modes","text":"<p>The <code>dereplication</code> mode removes redundant sequences while keeping representatives, using the cd-hit algorithm and ani metric. It is designed to reduce datasets to representative genomes, as outlined in Section 6.3.</p> <p>The <code>votu</code> mode clusters sequences into viral Operational Taxonomic Units, employing the leiden algorithm and ani metric. This mode groups contigs according to MIUViG standards, detailed in Section 6.2.</p> <p>The <code>species</code> mode classifies viruses into species, utilizing the complete algorithm and tani metric. It follows ICTV standards for species classification, as described in Section 6.1.</p>"},{"location":"commands/cluster/#default-parameters-by-mode","title":"Default Parameters by Mode","text":"Parameter dereplication votu species Algorithm cd-hit leiden complete Metric ani ani tani ANI cutoff 95% 95% 95% Query coverage 85% 85% None Pre-filter min-ident 95% 95% 70%"},{"location":"commands/cluster/#command-options","title":"Command Options","text":"<pre><code> Sequence clustering wrapper around external 'vclust' with three modes.      \n\n For advanced usage, provide custom vclust parameters as a quoted string.    \n See the vclust wiki for parameter details:                                  \n https://github.com/refresh-bio/vclust/wiki                                  \n\n Example:                                                                    \n     phu cluster --mode votu --input-contigs genomes.fna                                               \n\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  --mode                   [dereplication|votu|s  dereplication | votu | \u2502\n\u2502                             pecies]                species                \u2502\n\u2502                                                    [required]             \u2502\n\u2502 *  --input-contigs          PATH                   Input FASTA [required] \u2502\n\u2502    --output-folder          PATH                   Output directory       \u2502\n\u2502                                                    [default:              \u2502\n\u2502                                                    clustered-contigs]     \u2502\n\u2502    --threads                INTEGER RANGE [x&gt;=0]   0=all cores; otherwise \u2502\n\u2502                                                    N threads              \u2502\n\u2502                                                    [default: 0]           \u2502\n\u2502    --vclust-params          TEXT                   Custom vclust          \u2502\n\u2502                                                    parameters:            \u2502\n\u2502                                                    \"--min-kmers 20        \u2502\n\u2502                                                    --outfmt lite --ani    \u2502\n\u2502                                                    0.97\"                  \u2502\n\u2502    --help           -h                             Show this message and  \u2502\n\u2502                                                    exit.                  \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"commands/cluster/#examples","title":"Examples","text":""},{"location":"commands/cluster/#basic-examples","title":"Basic Examples","text":"<pre><code># Dereplicate viral contigs\nphu cluster --mode dereplication --input-contigs viral_contigs.fna\n\n# Cluster into vOTUs following MIUViG standards\nphu cluster --mode votu --input-contigs viral_contigs.fna\n\n# Classify viruses into species following ICTV standards\nphu cluster --mode species --input-contigs complete_genomes.fna\n</code></pre>"},{"location":"commands/cluster/#advanced-usage-with-custom-parameters","title":"Advanced Usage with Custom Parameters","text":"<p>The <code>--vclust-params</code> option allows you to customize any vclust parameter while maintaining the convenience of predefined modes. Parameters are automatically routed to the appropriate vclust command (prefilter, align, cluster).</p>"},{"location":"commands/cluster/#large-dataset-optimization-wiki-section-66","title":"Large Dataset Optimization (Wiki Section 6.6)","text":"<pre><code># Process large diverse dataset (IMG/VR style)\nphu cluster --mode votu --input-contigs large_dataset.fna \\\n  --vclust-params=\"--min-kmers 4 --batch-size 2000000 --kmers-fraction 0.2 --outfmt lite\"\n</code></pre>"},{"location":"commands/cluster/#highly-redundant-dataset-wiki-section-67","title":"Highly Redundant Dataset (Wiki Section 6.7)","text":"<pre><code># Process highly redundant sequences\nphu cluster --mode votu --input-contigs redundant_genomes.fna \\\n  --vclust-params=\"--min-kmers 10 --batch-size 100000 --max-seqs 1000 --outfmt lite --ani 0.97 --qcov 0.95\"\n</code></pre>"},{"location":"commands/cluster/#custom-thresholds","title":"Custom Thresholds","text":"<pre><code># More stringent clustering\nphu cluster --mode votu --input-contigs genomes.fna \\\n  --vclust-params=\"--ani 0.98 --qcov 0.90\"\n\n# Species clustering with custom genus threshold\nphu cluster --mode species --input-contigs genomes.fna \\\n  --vclust-params=\"--tani 0.97\"\n</code></pre>"},{"location":"commands/cluster/#comparison-with-direct-vclust-usage","title":"Comparison with Direct vclust Usage","text":"Task phu cluster Direct vclust Steps Single command 3 separate commands Configuration Preconfigured modes Manual parameter setup Customization <code>--vclust-params</code> option Full control Learning curve Minimal Requires vclust expertise Use case Common workflows Specialized analyses"},{"location":"commands/simplify-taxa/","title":"simplify-taxa","text":"<p>Simplify vContact taxonomy prediction columns into compact lineage codes for streamlined downstream analysis.</p>"},{"location":"commands/simplify-taxa/#overview","title":"Overview","text":"<p>The <code>simplify-taxa</code> command processes vContact3 final assignment files, transforming verbose taxonomic prediction strings into compact, standardized lineage codes. This transformation makes taxonomic data more manageable for visualization, filtering, and analysis while preserving hierarchical relationships.</p>"},{"location":"commands/simplify-taxa/#basic-usage","title":"Basic Usage","text":"<pre><code>phu simplify-taxa -i &lt;INPUT_FILE&gt; -o &lt;OUTPUT_FILE&gt; [options]\n</code></pre> <p>Input accepts CSV or TSV files from vContact3's <code>final_assignments.csv</code> output. Output format is automatically detected from file extension.</p>"},{"location":"commands/simplify-taxa/#inputoutput-formats","title":"Input/Output Formats","text":""},{"location":"commands/simplify-taxa/#supported-formats","title":"Supported Formats","text":"<ul> <li>Input: CSV, TSV (auto-detected from extension or <code>--sep</code> parameter)</li> <li>Output: CSV, TSV (auto-detected from file extension)</li> </ul>"},{"location":"commands/simplify-taxa/#expected-input-columns","title":"Expected Input Columns","text":"<p>The command automatically detects and processes any columns matching the pattern <code>*_prediction</code>: - <code>kingdom_prediction</code> - <code>phylum_prediction</code>  - <code>class_prediction</code> - <code>order_prediction</code> - <code>family_prediction</code> - <code>subfamily_prediction</code> - <code>genus_prediction</code> - <code>realm_prediction</code> (if present)</p>"},{"location":"commands/simplify-taxa/#transformation-logic","title":"Transformation Logic","text":""},{"location":"commands/simplify-taxa/#before-transformation","title":"Before Transformation","text":"<pre><code>novel_genus_1_of_novel_family_2_of_novel_order_3_of_Caudoviricetes\n</code></pre>"},{"location":"commands/simplify-taxa/#after-transformation","title":"After Transformation","text":"<pre><code>Caudoviricetes:NO3:NF2:NG1\n</code></pre>"},{"location":"commands/simplify-taxa/#compact-code-format","title":"Compact Code Format","text":"<p>The transformation uses standardized rank codes: - <code>NK</code> = Novel Kingdom - <code>NP</code> = Novel Phylum - <code>NC</code> = Novel Class - <code>NO</code> = Novel Order - <code>NF</code> = Novel Family - <code>NSF</code> = Novel Subfamily - <code>NG</code> = Novel Genus</p>"},{"location":"commands/simplify-taxa/#command-options","title":"Command Options","text":"<pre><code> Simplify vContact taxonomy prediction columns into compact lineage codes.   \n\n Transforms verbose vContact taxonomy strings like                           \n 'novel_genus_1_of_novel_family_2_of_Caudoviricetes' into compact codes like \n 'Caudoviricetes:NF2:NG1'.                                                   \n\n Example:                                                                    \n     phu simplify-taxa -i final_assignments.csv -o simplified.csv           \n     --add-lineage                                                           \n\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 *  --input           -i  PATH  Input vContact final_assignments.csv       \u2502\n\u2502                              [required]                                   \u2502\n\u2502 *  --output          -o  PATH  Output path (.csv or .tsv) [required]      \u2502\n\u2502    --add-lineage         FLAG  Append compact_lineage column from deepest \u2502\n\u2502                              simplified rank                              \u2502\n\u2502    --lineage-col         TEXT  Name of the lineage column                 \u2502\n\u2502                              [default: compact_lineage]                   \u2502\n\u2502    --sep                 TEXT  Override delimiter: ',' or '\\t'.           \u2502\n\u2502                              Auto-detected from extension if not set      \u2502\n\u2502    --help            -h        Show this message and exit.                \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"commands/simplify-taxa/#examples","title":"Examples","text":""},{"location":"commands/simplify-taxa/#basic-usage_1","title":"Basic Usage","text":"<pre><code># Simplify taxonomy predictions in CSV format\nphu simplify-taxa -i final_assignments.csv -o simplified_taxonomy.csv\n\n# Process TSV format with automatic detection\nphu simplify-taxa -i final_assignments.tsv -o simplified_taxonomy.tsv\n\n# Override input delimiter detection\nphu simplify-taxa -i data.txt -o output.csv --sep \"\\t\"\n</code></pre>"},{"location":"commands/simplify-taxa/#advanced-usage","title":"Advanced Usage","text":"<pre><code># Add compact lineage column with deepest available classification\nphu simplify-taxa -i final_assignments.csv -o simplified.csv --add-lineage\n\n# Customize lineage column name\nphu simplify-taxa -i final_assignments.csv -o simplified.csv \\\n  --add-lineage --lineage-col \"best_taxonomy\"\n</code></pre>"},{"location":"commands/simplify-taxa/#lineage-column-feature","title":"Lineage Column Feature","text":"<p>The <code>--add-lineage</code> option creates an additional column containing the deepest (most specific) available taxonomic classification for each sequence.</p>"},{"location":"commands/simplify-taxa/#priority-order-most-least-specific","title":"Priority Order (Most \u2192 Least Specific)","text":"<ol> <li><code>genus_prediction</code></li> <li><code>subfamily_prediction</code></li> <li><code>family_prediction</code> </li> <li><code>order_prediction</code></li> <li><code>class_prediction</code></li> <li><code>phylum_prediction</code></li> <li><code>kingdom_prediction</code></li> <li><code>realm_prediction</code></li> </ol>"},{"location":"commands/simplify-taxa/#example-output","title":"Example Output","text":"Sequence genus_prediction family_prediction compact_lineage seq1 Caudoviricetes:NF2:NG1 Caudoviricetes:NF2 Caudoviricetes:NF2:NG1 seq2 - Caudoviricetes:NF5 Caudoviricetes:NF5 seq3 - - -"},{"location":"commands/simplify-taxa/#special-cases-handled","title":"Special Cases Handled","text":""},{"location":"commands/simplify-taxa/#edge-cases-for-0-chains","title":"Edge Cases for \"0\" Chains","text":"<p>The tool correctly handles vContact2's special \"0\" designation patterns:</p> <pre><code># Input\nnovel_class_0_of_novel_phylum_0_of_novel_kingdom_5_of_Duplodnaviria\n\n# Output  \nDuplodnaviria:NK5:NP0:NC0\n</code></pre>"},{"location":"commands/simplify-taxa/#multiple-candidates","title":"Multiple Candidates","text":"<p>When vContact2 provides multiple taxonomic candidates (separated by <code>||</code>), each is processed independently:</p> <pre><code># Input\nCaudoviricetes:NF1:NG2||Caudoviricetes:NF3:NG4\n\n# Output\nCaudoviricetes:NF1:NG2||Caudoviricetes:NF3:NG4\n</code></pre>"},{"location":"commands/simplify-taxa/#quality-assessment","title":"Quality Assessment","text":"<p>After processing, the command provides a summary showing remaining <code>novel_</code> strings for quality control:</p> <pre><code>QA Summary:\n  genus_prediction: 45 remaining 'novel_' strings\n  family_prediction: 12 remaining 'novel_' strings\n  order_prediction: 3 remaining 'novel_' strings\n</code></pre>"},{"location":"commands/simplify-taxa/#workflow-integration","title":"Workflow Integration","text":""},{"location":"commands/simplify-taxa/#typical-bioinformatics-pipeline","title":"Typical Bioinformatics Pipeline","text":"<pre><code># 1. Run vContact3 (external)\nvcontact3 --nucleotide &lt;viral-genome.fasta&gt; --output-dir &lt;vcontact-output&gt;\n\n# 2. Simplify taxonomy predictions\nphu simplify-taxa -i vcontact_output/final_assignments.csv \\\n  -o taxonomy_simplified.csv --add-lineage\n\n# 3. Use simplified taxonomy for downstream analysis\n# - Phylogenetic visualization\n# - Diversity analysis  \n# - Taxonomic filtering\n</code></pre>"},{"location":"commands/simplify-taxa/#comparison-with-manual-processing","title":"Comparison with Manual Processing","text":"Task phu simplify-taxa Manual Processing Complexity Single command Custom scripts/regex Edge cases Automatically handled Error-prone Consistency Standardized format Variable approaches Speed Optimized pandas operations Slower loops Maintenance Built-in updates Manual fixes needed"},{"location":"commands/simplify-taxa/#output-file-structure","title":"Output File Structure","text":"<p>The output file preserves the original structure while transforming taxonomy columns:</p> <pre><code>Original columns + Simplified *_prediction columns [+ compact_lineage column]\n</code></pre> <p>All non-taxonomy columns remain unchanged, ensuring compatibility with existing workflows.</p>"}]}